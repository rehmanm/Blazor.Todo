@using Blazor.Todo.Helper

@inject AppTheme theme;
@rendermode InteractiveServer

 

@if (theme.IsDarkMode)
{
    <button type="button" @onclick="@( () => SetTheme(false))">
        <TailBlazorHeroIcon Icon="HeroIcon.Sun" Class="h-8 w-8 cursor-pointer text-yellow-500" IconStyle="IconStyle.Solid" />
    </button>
}
else
{
    <button type="button" @onclick="@(() => SetTheme(true))">
        <TailBlazorHeroIcon Icon="HeroIcon.Moon" Class="h-8 w-8 cursor-pointer text-gray-900" IconStyle="IconStyle.Solid" />
    </button>
}

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            theme.IsDarkMode = await theme.IsBrowserDarkMode();
            await theme.ListenForThemeChanges();
            StateHasChanged();
        }
    }
    protected override void OnInitialized()
    {
        theme.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        theme.OnChange -= StateHasChanged;
    }

    private void SetTheme(bool isDarkMode)  {
        theme.IsDarkMode = isDarkMode;
    }
}