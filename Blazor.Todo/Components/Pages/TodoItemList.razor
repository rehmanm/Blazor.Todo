@inject AppTheme theme
@inject ICategoryService _categoryService;
@inject ITodoService _todoService;

<main class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 p-10 gap-10">

    @foreach (var todo in TodoItems)
    {
        <TodoItem Todo="todo" ShowModal="@ShowModal" />
    }

</main>


<div id="crud-modal" tabindex="-1" aria-hidden="true" class="@(showModal ? "" :"hidden") overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative p-4 w-full max-w-md max-h-full">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
            <!-- Modal header -->
            <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                    Edit Todo
                </h3>
                <button type="button" @onclick="HideModal" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="crud-modal">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>
            </div>
            <!-- Modal body -->
            <form class="p-4 md:p-5">
                <div class="grid gap-4 mb-4 grid-cols-2">
                    <div class="col-span-2">
                        <label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Title</label>
                        <input type="text" name="name" id="name" @bind-value="@todoModal.Title" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Title" required="">
                    </div>
                    <div class="col-span-2">
                        <label for="category" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Category</label>

                        <InputSelect @bind-Value="@todoModal.CategoryName" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                            @foreach (Category category in _categorys)
                            {
                                <option value="@category.CategoryName" selected="@(category.CategoryName == todoModal.CategoryName )">@category.CategoryName</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-span-2">
                        <label for="todoComplete" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Is Complete</label>
                        <InputCheckbox DisplayName="todoComplete" @bind-Value="@todoModal.IsComplete" class="w-4 h-4 bg-pink-100 border-purple-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-pink-100 dark:border-gray-600" />

                    </div>
                </div>
                <button type="button" class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" @onclick="UpdateTodos">
                    <TailBlazorHeroIcon Icon="HeroIcon.Save" IconStyle="IconStyle.Solid" />

                </button>
            </form>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public List<Todos> TodoItems { get; set; } = new List<Todos>();

    private List<Category> _categorys = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        _categorys = await _categoryService.GetCategoriesAsync();

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            theme.IsDarkMode = await theme.IsBrowserDarkMode();
            StateHasChanged();
        }
    }

    private bool showModal = false;

    private Todos todoModal = new Todos { Title = "", CategoryName = "" };
    private void ShowModal(Todos todos)
    {
        showModal = true;
        todoModal = new Todos
            {
                Title = todos.Title,
                CategoryName = todos.CategoryName,
                IsComplete = todos.IsComplete,
                DueDate = todos.DueDate,
                Id = todos.Id
            };
    }

    private void HideModal()
    {
        showModal = false;
    }

    private async Task UpdateTodos()
    {
        await _todoService.UpdateTodo(todoModal.Id, todoModal);
        HideModal();
        StateHasChanged();
    }
}
