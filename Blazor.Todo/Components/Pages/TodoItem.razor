
<article class="bg-slate-100 dark:bg-slate-800 flex flex-col rounded-lg shadow-sm hover:scale-105 hover:shadow-xl hover:bg-slate-200  dark:hover:bg-slate-800 transition-all duration-200 ease-out">

    <div class="flex-1 flex flex-col @GetTodoPriority() rounded-lg">
        <div class="flex-1 flex flex-col p-5">
            <div class="flex justify-end">
                <h2 class="font-bold font-serif flex-1">@Todo.Title</h2>

                <button data-modal-target="crud-modal" data-modal-toggle="crud-modal" type="button" @onclick="ShowModalAsync">
                    <TailBlazorHeroIcon Icon="HeroIcon.PencilAlt" IconStyle="IconStyle.Solid" />
                </button>



            </div>
            <div>@Todo.CategoryName</div>

            @if (Todo.IsComplete)
            {
                <footer class="text-xs flex space-x-1 pt-5 ">
                    <TailBlazorHeroIcon Icon="HeroIcon.CheckCircle" IconStyle="IconStyle.Solid" />
                </footer>
            }
            else
            {
                <footer class="flex justify-end text-gray-400 pt-5">

                    <div class="flex items-center">
                        <InputCheckbox DisplayName="todoComplete" @bind-Value="@Todo.IsComplete" class="w-4 h-4 bg-pink-100 border-purple-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-pink-100 dark:border-gray-600" @onclick="MarkComplete" />
                        <label for="todoComplete" class="ms-2 text-sm font-medium text-gray-400 dark:text-gray-500">Complete</label>

                    </div>
                    <div class="flex-1 italic text-right text-xs">@Todo.DueDate</div>
                </footer>
            }

        </div>
    </div>

</article>
@code {

    [Parameter]
    public EventCallback<Todos> ShowModal { get; set; }

    [Parameter]
    public Todos Todo { get; set; }

    private string GetTodoPriority()
    {
        return Todo.IsComplete
                ? ""
                : "border border-solid border-red-500";
    }

    private void MarkComplete()
    {
        Todo.IsComplete = true;
    }

    private async Task ShowModalAsync()
    {
        await ShowModal.InvokeAsync(Todo);    
    }
}
